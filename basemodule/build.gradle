if (isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 29
    buildToolsVersion '30.0.1'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'

//    /**核心库-anko库 ，dsl动态创建view*/
    def anko_version = '0.10.8'
    /**anko*/
    api "org.jetbrains.anko:anko:$anko_version"
    api "org.jetbrains.anko:anko-design:$anko_version"
    api "org.jetbrains.anko:anko-design-coroutines:$anko_version"
    api "org.jetbrains.anko:anko-support-v4:$anko_version"
    api "org.jetbrains.anko:anko-constraint-layout:$anko_version"
    api "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"
    api "org.jetbrains.anko:anko-recyclerview-v7-coroutines:$anko_version"


    /**splitties 替代 anko**/
    api("com.louiscad.splitties:splitties-fun-pack-android-base:3.0.0-alpha06")
    api("com.louiscad.splitties:splitties-fun-pack-android-base-with-views-dsl:3.0.0-alpha06")//dsl支持
    api("com.louiscad.splitties:splitties-fun-pack-android-appcompat:3.0.0-alpha06") //appcompat支持
    api("com.louiscad.splitties:splitties-fun-pack-android-appcompat-with-views-dsl:3.0.0-alpha06")//appcompat的dsl支持
    api("com.louiscad.splitties:splitties-fun-pack-android-material-components:3.0.0-alpha06")//material 支持
    api("com.louiscad.splitties:splitties-fun-pack-android-material-components-with-views-dsl:3.0.0-alpha06")//material 的dsl支持
    api("com.louiscad.splitties:splitties-views-dsl-ide-preview:3.0.0-alpha06")


    /**androidx,各种库*/
    //基本库 - 最常使用
    api 'androidx.appcompat:appcompat:1.3.0-alpha01'
    api 'androidx.core:core-ktx:1.3.1'
    api "androidx.fragment:fragment-ktx:1.3.0-alpha07"
    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"
    //    api "androidx.navigation:navigation-dynamic-features-fragment:2.3.0-SNAPSHOT"

    //页面
    api "androidx.recyclerview:recyclerview:1.1.0"
    api "androidx.recyclerview:recyclerview-selection:1.1.0-rc01"//用于控制触摸和鼠标驱动的选择
    api 'androidx.constraintlayout:constraintlayout:2.0.0-rc1' //约束布局
    api 'androidx.viewpager2:viewpager2:1.0.0' //viewpager2
    api "androidx.paging:paging-runtime-ktx:3.0.0-alpha04" // paging3分页加载

    //其他
    api "androidx.biometric:biometric:1.0.1" //生物识别
    api "androidx.startup:startup-runtime:1.0.0-alpha02"//启动
    api "androidx.asynclayoutinflater:asynclayoutinflater:1.0.0"//异步布局填充
    api "androidx.autofill:autofill:1.0.0" //自动填写
    api "androidx.browser:browser:1.2.0" //打开浏览器，传递数据
    api "androidx.work:work-runtime-ktx:2.4.0" //WorkManager,应用退出也可以完成



    api "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    api "androidx.room:room-ktx:$room_version"


    // camerax库
    def camerax_version = "1.0.0-beta07"
    api "androidx.camera:camera-core:${camerax_version}" //相机库
    api "androidx.camera:camera-camera2:${camerax_version}"//可选，camera2，因为core间接的包含camera2
    api "androidx.camera:camera-lifecycle:${camerax_version}"//可选，使用camera-lifecycle库
    api "androidx.camera:camera-view:1.0.0-alpha14"//可选，使用 CameraX View
    api "androidx.camera:camera-extensions:1.0.0-alpha14" //可选，使用  CameraX 扩展库

    // lifecycle库
    def lifecycle_version = "2.3.0-alpha06"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycle_version}"
    api "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycle_version}"
    api "androidx.lifecycle:lifecycle-runtime-ktx:${lifecycle_version}"
    api "androidx.lifecycle:lifecycle-common-java8:${lifecycle_version}"
    api "androidx.lifecycle:lifecycle-reactivestreams-ktx:${lifecycle_version}"
    api "androidx.lifecycle:lifecycle-extensions:2.2.0"



    api "androidx.biometric:biometric:1.0.1"//指纹库
    api 'com.google.android.material:material:1.3.0-alpha02' //样式库



    /**网络相关*/
    def retrofit2_version = '2.9.0'
    api "com.squareup.retrofit2:retrofit:$retrofit2_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    def okhttp3_version = '4.7.2'
    api "com.squareup.okhttp3:okhttp:$okhttp3_version"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    def glide_version = '4.11.0'
    api "com.github.bumptech.glide:glide:$glide_version"
    api "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    api("com.github.bumptech.glide:recyclerview-integration:$glide_version") {
        transitive = false
    }
    kapt "com.github.bumptech.glide:compiler:$glide_version"


    api 'de.hdodenhof:circleimageview:3.1.0' //圆形图片库
    api 'com.github.chrisbanes:PhotoView:2.3.0' //图片缩放
//    api 'com.jeremyliao:live-event-bus-x:1.5.1'//替代eventbus，基于livedata的通讯库，可以跨进程
    api 'cn.bingoogolapple:bga-qrcode-zbar:1.3.6'//高效二维码库，基于zbar
    api 'com.jaeger.statusbarutil:library:1.5.1' //statusbar库
    api 'com.orhanobut:logger:2.2.0' //log打印库
    api 'com.google.code.gson:gson:2.8.6' // gson
    api 'com.github.salomonbrys.kotson:kotson:2.5.0' //gson 库的kotlin版本
    api 'com.tencent:mmkv-static:1.0.23' // 替代sp的库，高效，稳定，基于protobuf的本地储存库
    api 'com.just.agentweb:agentweb:4.0.3-beta' // webview库
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4' //recycleview的adapter库
    api 'org.jsoup:jsoup:1.13.1' //解析html数据的库
    //下拉刷新库
    def srl_version = '2.0.1'
    api "com.scwang.smart:refresh-layout-kernel:$srl_version"      //核心必须依赖
    api "com.scwang.smart:refresh-header-classics:$srl_version"    //经典刷新头
//    api  "com.scwang.smart:refresh-header-radar:$srl_version"       //雷达刷新头
//    api  "com.scwang.smart:refresh-header-falsify:$srl_version"     //虚拟刷新头
    api "com.scwang.smart:refresh-header-material:$srl_version"    //谷歌刷新头
//    api  "com.scwang.smart:refresh-header-two-level:$srl_version"   //二级刷新头
//    api  "com.scwang.smart:refresh-footer-ball:$srl_version"        //球脉冲加载
    api "com.scwang.smart:refresh-footer-classics:$srl_version"    //经典加载

    //material design风格的dialog库
    def md_version = '3.3.0'
    api "com.afollestad.material-dialogs:core:$md_version" //核心库
    api "com.afollestad.material-dialogs:lifecycle:$md_version"//lifecycle支持
    api "com.afollestad.material-dialogs:datetime:$md_version"//日期选择酷
    api "com.afollestad.material-dialogs:files:$md_version"//文件选择库
    api "com.afollestad.material-dialogs:input:$md_version" //输入框样式


    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}