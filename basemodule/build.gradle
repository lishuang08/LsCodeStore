import ls.yylx.lscodestore.plugin.*

plugins {
    id "com.android.library"
    id "kotlin-android"
    id "kotlin-kapt"
    id "kotlin-android-extensions"
    id "ls.yylx.lscodestore.plugin"
    id "androidx.navigation.safeargs"
}


android {
    compileSdkVersion 29
    buildToolsVersion '30.0.2'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api(Kt.kt, Kt.kt_jdk8, Kt.coroutines)

    api 'com.github.microshow:RxFFmpeg:4.8.0'


//    /**核心库-anko库 ，dsl动态创建view*/
    api(
            Anko.anko,
            Anko.anko_design,
            Anko.anko_support,
            Anko.anko_coroutines,
            Anko.anko_constraintlayout,
            Anko.anko_recyclerview,
            Anko.anko_recyclerview_coroutines
    )

    api(
            Androidx.appcompat,
            Androidx.core,
            Androidx.constraintlayout,
            Androidx.collection,
            Androidx.cardview,
            Androidx.customview,
            Androidx.camera_core,
            Androidx.camera_camera2,
            Androidx.camera_lifecycle,
            Androidx.camera_view,
            Androidx.camera_extensions,
            Androidx.dynamicanimation,
            Androidx.fragment,
            Androidx.lifecycle_viewmodel,
            Androidx.lifecycle_livedata,
            Androidx.lifecycle_runtime,
            Androidx.lifecycle_savestate,
            Androidx.lifecycle_common,
            Androidx.lifecycle_service,
            Androidx.lifecycle_process,
            Androidx.paging_runtime,
            Androidx.material,
            Androidx.nav_fragment,
            Androidx.nav_ui,
            Androidx.room_runtime,
            Androidx.room_ktx,
            Androidx.recycleview,
//            Androidx.recycleview_selection,
            Androidx.viewpager2,
            Androidx.biometric,
            Androidx.startup,
            Androidx.asynclayoutinflater,
            Androidx.autofill,
            Androidx.work_ktx
    )

    kapt(
            Androidx.kapt_lifecycle_compiler,
            Androidx.kapt_room_compiler,
            NetWork.kapt_glide
    )


    api(
            NetWork.retrofit,
            NetWork.retrofit_gson,
            NetWork.coil,
            NetWork.okhttp,
            NetWork.okhttp_logging,
            NetWork.glide,
            NetWork.glide_recyclerview,
            NetWork.glide_okhttp3
    )

    api 'de.hdodenhof:circleimageview:3.1.0' //圆形图片库
    api 'com.github.chrisbanes:PhotoView:2.3.0' //图片缩放
//    api 'com.jeremyliao:live-event-bus-x:1.5.1'//替代eventbus，基于livedata的通讯库，可以跨进程
    api 'cn.bingoogolapple:bga-qrcode-zbar:1.3.6'//高效二维码库，基于zbar
    api 'com.jaeger.statusbarutil:library:1.5.1' //statusbar库
    api 'com.orhanobut:logger:2.2.0' //log打印库
    api 'com.google.code.gson:gson:2.8.6' // gson
    api 'com.github.salomonbrys.kotson:kotson:2.5.0' //gson 库的kotlin版本
    api 'com.tencent:mmkv-static:1.2.1' // 替代sp的库，高效，稳定，基于protobuf的本地储存库
    api 'com.just.agentweb:agentweb:4.1.3' // webview库
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4' //recycleview的adapter库
    api 'org.jsoup:jsoup:1.13.1' //解析html数据的库
    //下拉刷新库
    def srl_version = '2.0.1'
    api "com.scwang.smart:refresh-layout-kernel:$srl_version"      //核心必须依赖
    api "com.scwang.smart:refresh-header-classics:$srl_version"    //经典刷新头
//    api  "com.scwang.smart:refresh-header-radar:$srl_version"       //雷达刷新头
//    api  "com.scwang.smart:refresh-header-falsify:$srl_version"     //虚拟刷新头
    api "com.scwang.smart:refresh-header-material:$srl_version"    //谷歌刷新头
//    api  "com.scwang.smart:refresh-header-two-level:$srl_version"   //二级刷新头
//    api  "com.scwang.smart:refresh-footer-ball:$srl_version"        //球脉冲加载
    api "com.scwang.smart:refresh-footer-classics:$srl_version"    //经典加载

    //material design风格的dialog库
    def md_version = '3.3.0'
    api "com.afollestad.material-dialogs:core:$md_version" //核心库
    api "com.afollestad.material-dialogs:lifecycle:$md_version"//lifecycle支持
    api "com.afollestad.material-dialogs:datetime:$md_version"//日期选择酷
    api "com.afollestad.material-dialogs:files:$md_version"//文件选择库
    api "com.afollestad.material-dialogs:input:$md_version" //输入框样式


}