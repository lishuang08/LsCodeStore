apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"
apply plugin: "androidx.navigation.safeargs"
//apply plugin: 'dagger.hilt.android.plugin'
//apply plugin: 'koin'
//apply plugin: "com.didi.dokit"
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"


    defaultConfig {
        applicationId "ls.yylx.lscodestore"

        minSdkVersion 24
        targetSdkVersion 30
        versionCode 2
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    signingConfigs {
        config {
            enableV3Signing(true)
            enableV4Signing(true)
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    flavorDimensions "flavor"
    productFlavors {
        debugUrl {
            dimension "flavor"
            versionNameSuffix "-测试"
            applicationIdSuffix ".testUrl"


            manifestPlaceholders = [app_name: "啊啊啊测试", app_icon: "@mipmap/ic_launcher"]

        }

        myrelease {
            dimension "flavor"

        }
    }


    compileOptions {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    /**加快编译速度*/
    tasks.whenTaskAdded { task ->
        if (task.name.contains("lint")
                || task.name.equals("clean")
                || task.name.contains("Aidl")
                || task.name.contains("mockableAndroidJar")
                || task.name.contains("UnitTest")
                || task.name.contains("AndroidTest")
//                || task.name.contains("Ndk")
//                || task.name.contains("Jni")
        ) {
            task.enabled = false
        }
    }

    dexOptions {
        preDexLibraries true
    }


    beforeEvaluate {

    }
    afterEvaluate {

    }
//    buildFeatures {
//        // Enables Jetpack Compose for this module
//        compose true
//    }
//    composeOptions {
//        kotlinCompilerExtensionVersion "0.1.0-dev13"
//    }
}


//
//dokitExt {
//    //dokit 插件开关
//    dokitPluginSwitch true
//    //通用设置
//    comm {
//        //地图经纬度开关
//        gpsSwitch true
//        //网络开关
//        networkSwitch true
//        //大图开关
//        bigImgSwitch true
//    }
//
//    slowMethod {
//        //0:默认模式 打印函数调用栈 需添加指定入口  默认为application onCreate 和attachBaseContext
//        //1:普通模式 运行时打印某个函数的耗时 全局业务代码函数插入 已弃用
//        strategy 1
//        //函数功能开关 已弃用
//        methodSwitch false
//
//        //调用栈模式配置
//        stackMethod {
//            //默认值为 5ms 小于该值的函数在调用栈中不显示
//            thresholdTime 5
//            //调用栈函数入口
//            enterMethods = ["com.didichuxing.doraemondemo.MainDebugActivity.test1"]
//        }
//        //普通模式配置`
//        normalMethod {
//            //默认值为 500ms 小于该值的函数在运行时不会在控制台中被打印
//            thresholdTime 100
//            //需要针对函数插装的包名
//            packageNames = ["com.didichuxing.doraemondemo"]
//            //不需要针对函数插装的包名&类名
//            methodBlacklist = ["com.didichuxing.doraemondemo.dokit"]
//        }
//    }
//}

dependencies {
    implementation project(":basemodule")
    implementation project(":firstmodule")
    implementation project(":secondmodule")
    implementation project(":flutter")


//    implementation "com.google.dagger:hilt-android:$hilt_version"
//    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"


    implementation "com.arthenica:mobile-ffmpeg-full:4.3.2"
    implementation "com.quickbirdstudios:opencv:4.1.0-contrib"
//
//    implementation "androidx.ui:ui-core:0.1.0-dev13"
//    implementation "androidx.ui:ui-tooling:0.1.0-dev13"
//    implementation "androidx.ui:ui-layout:0.1.0-dev13"
//    implementation "androidx.ui:ui-material:0.1.0-dev13"


    debugImplementation "com.didichuxing.doraemonkit:doraemonkit:3.1.8"
    releaseImplementation "com.didichuxing.doraemonkit:doraemonkit-no-op:3.1.8"
//    debugImplementation "com.squareup.leakcanary:leakcanary-android:2.4"
//    debugImplementation "com.didichuxing.doraemonkit:doraemonkit:3.1.8"
//    releaseImplementation "com.didichuxing.doraemonkit:doraemonkit-no-op:3.1.8"

//    // Koin for Kotlin
//    implementation "org.koin:koin-core:$koin_version"
//    implementation "org.koin:koin-core-ext:$koin_version"
//    testImplementation "org.koin:koin-test:$koin_version"
//    // Koin for Android
//    implementation "org.koin:koin-android:$koin_version"
//    // Koin AndroidX Scope features
//    implementation "org.koin:koin-androidx-scope:$koin_version"
//    // Koin AndroidX ViewModel features
//        implementation "org.koin:koin-androidx-viewmodel:$koin_version"
//    // Koin AndroidX Fragment features
//    implementation "org.koin:koin-androidx-fragment:$koin_version"
//    // Koin AndroidX Experimental features
//    implementation "org.koin:koin-androidx-ext:$koin_version"

// implementation "org.koin:koin-java:$koin_version"

//    implementation "org.koin:koin-androidx-scope:$koin_version"
//    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
//    implementation "org.koin:koin-androidx-fragment:$koin_version"
//    implementation "org.koin:koin-androidx-ext:$koin_version"


    testImplementation "junit:junit:4.13"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"


}
